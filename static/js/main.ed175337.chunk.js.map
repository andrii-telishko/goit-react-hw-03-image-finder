{"version":3,"sources":["components/SearchBar/SearchBar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Spinner/Spinner.js","components/Modal/Modal.js","api.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","state","value","handleChange","e","setState","currentTarget","handleSubmit","preventDefault","props","changeQuery","className","onSubmit","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","url","alt","src","ImageGallery","images","openModal","map","id","webformatURL","tags","largeImageURL","onClick","Button","Spinner","color","height","width","Modal","handleKeyDown","code","closeModal","handleBackdropClick","target","window","addEventListener","removeEventListener","children","axios","defaults","baseURL","fetchData","searchQuery","currentPage","pageSize","get","then","response","data","hits","App","isLoading","showModal","modalImg","modalAlt","error","onChangeQuery","query","fetchImages","options","prevState","scrollWindow","catch","finally","prevProps","scrollTo","top","document","documentElement","scrollHeight","behavior","shouldRenderLoadMoreButton","length","style","textAlign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ed175337.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class SearchBar extends Component {\r\n    state = {value: ''};\r\n\r\n    handleChange = e => {\r\n       this.setState({ value: e.currentTarget.value });\r\n    };\r\n    \r\n    handleSubmit = e => {\r\n         e.preventDefault();\r\n\r\n        this.props.changeQuery(this.state.value);\r\n        this.setState({ value: '' });\r\n  };\r\n    \r\n    render() {\r\n        return (\r\n            <header className=\"Searchbar\" onSubmit={this.handleSubmit}>\r\n                <form className=\"SearchForm\">\r\n                    <button type=\"submit\" className=\"SearchForm-button\">\r\n                        <span className=\"SearchForm-button-label\">Search</span>\r\n                    </button>\r\n                    <input\r\n                        className=\"SearchForm-input\"\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        placeholder=\"Search images and photos\"\r\n                        value={this.state.value}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </form>\r\n            </header>\r\n        );\r\n    };\r\n};","import React from 'react';\r\n\r\nconst ImageGalleryItem = ({url, alt}) => {\r\n    return (\r\n       <img src={url} alt={alt} className=\"ImageGalleryItem-image\" />\r\n    );\r\n};\r\n\r\nexport default ImageGalleryItem","import React from 'react';\r\nimport ImageGalleryItem from '../ImageGalleryItem'\r\n\r\n  const ImageGallery = ({images, openModal}) => {\r\n    return (\r\n      <ul className=\"ImageGallery\">\r\n            {images.map(({ id, webformatURL, tags, largeImageURL }) => {\r\n                return (\r\n                    <li className=\"ImageGalleryItem\" key={id} onClick={() => {openModal(largeImageURL, tags)}}>\r\n                        <ImageGalleryItem url={webformatURL} alt={ tags }/>\r\n                    </li>\r\n             );\r\n         })}\r\n      </ul>\r\n  );\r\n};\r\n\r\nexport default ImageGallery;\r\n\r\n\r\n        \r\n        ","import React from 'react';\r\n\r\nconst Button = ({onClick}) => {\r\n    return (<div className='button-conteiner'><button type='button' className=\"Button\" onClick={onClick}>Load more</button></div>);\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className='spinner-conteiner'>\r\n            <Loader\r\n             type=\"Puff\"\r\n             color=\"#00BFFF\"\r\n             height={100}\r\n            width={100} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\r\n\r\nexport default class Modal extends Component {\r\n    \r\ncomponentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n    \r\n};\r\n\r\n  componentWillUnmount() {\r\n      window.removeEventListener('keydown', this.handleKeyDown);\r\n      \r\n};\r\n\r\nhandleKeyDown = (e) => {\r\n    if (e.code === 'Escape') {\r\n      this.props.closeModal();\r\n    }\r\n  };\r\n\r\nhandleBackdropClick = (e) => {\r\n     if (e.currentTarget === e.target) {\r\n      this.props.closeModal();\r\n    }\r\n    };\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n                <div className=\"Modal\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://pixabay.com/api/';\r\nconst KEY = '21283413-606cd1182a523c739b6934f12';\r\n  \r\nconst fetchData = ({ searchQuery = '', currentPage = 1, pageSize = 15 }) => {\r\n  return axios\r\n    .get(\r\n      `?q=${searchQuery}&page=${currentPage}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=${pageSize}`\r\n    )\r\n    .then(response => response.data.hits);\r\n};\r\n\r\nexport default  fetchData;\r\n\r\n\r\n","import './App.css';\nimport React, { Component } from 'react';\nimport './styles.css';\nimport SearchBar from './components/SearchBar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Spinner from './components/Spinner';\nimport Modal from './components/Modal';\nimport fetchData from './api'\n\nclass App extends Component {\n  state = {\n    searchQuery: '',\n    currentPage: 1,\n    images: [],\n    isLoading: false,\n    showModal: false,\n    modalImg: '',\n    modalAlt: '',\n    error: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchImages();\n    };\n  };\n\n  onChangeQuery = query => {\n    this.setState({\n      searchQuery: query,\n      currentPage: 1,\n      images: [],\n      error: null,\n    });\n  };\n\n  fetchImages = () => {\n    const { currentPage, searchQuery } = this.state;\n    const options = { searchQuery, currentPage };\n\n    this.setState({ isLoading: true });\n     \n    fetchData(options).then(images => {\n      this.setState(prevState => ({\n        images: [...prevState.images, ...images],\n        currentPage: prevState.currentPage + 1,\n      }));\n      this.scrollWindow();\n    }).catch(error => this.setState({ error }))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  scrollWindow() {\n    window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n  }\n\n  openModal = (url, alt) => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n      modalImg: url,\n      modalAlt: alt\n    }));\n  };\n\n  closeModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n      modalImg: '',\n      modalAlt: ''\n    }));\n  };\n  \n  render() {\n    const { error, images, isLoading, showModal, modalImg, modalAlt } = this.state;\n    const shouldRenderLoadMoreButton = images.length > 0 && !isLoading;\n    \n    return (\n      <>\n        <SearchBar changeQuery={this.onChangeQuery} />\n        {error && <h1 style={{ color: '#ff0000', textAlign: 'center' }}>Something going wrong</h1>}\n        <ImageGallery images={images} openModal={ this.openModal }/>\n        {isLoading && <Spinner/>}\n        {shouldRenderLoadMoreButton && <Button onClick={this.fetchImages} />}\n        {showModal && <Modal closeModal={this.closeModal}>\n              <img src={modalImg} alt={modalAlt}/>\n          </Modal>}\n        </>\n       )\n  };\n};\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'modern-normalize/modern-normalize.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}